apiVersion: apps/v1
kind: Deployment
metadata:
  name: rc-deployment
  labels:
    app: resource-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource-consumer
  template:
    metadata:
      labels:
        app: resource-consumer
    spec:
      containers:
        - name: resource-consumer
          image: gcr.io/k8s-staging-e2e-test-images/resource-consumer:1.9
          resources:
            requests:
              cpu: "50m"
              memory: "50Mi"
            limits:
              cpu: "500m"
              memory: "500Mi"
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: resource-consumer
  name: rc-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: resource-consumer
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: rc-vpa
spec:
  to:
    kind: Service
    name: rc-service
  port:
    targetPort: 8080
---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: rc-cpu-cron-job
spec:
  schedule: "*/10 8-17 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cron-resource-consumer
            image: buildpack-deps:curl
            command:
            - /bin/sh
            - -ec
            - curl --data "millicores=600&durationSec=500" http://rc-vpa-neu-cs6620.apps.smaug.na.operate-first.cloud/ConsumeCPU
            - echo "DONE!"
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: rc-mem-cron-job
spec:
  schedule: "*/5 8-17 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cron-resource-consumer
            image: buildpack-deps:curl
            command:
            - /bin/sh
            - -ec
            - curl --data "megabytes=400&durationSec=200" http://rc-vpa-neu-cs6620.apps.smaug.na.operate-first.cloud/ConsumeMem
            - echo "DONE!"
          restartPolicy: OnFailure
